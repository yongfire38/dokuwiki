====== DB-Scheduler Batch Template Project Wizard ======


===== 사용법(Continue) =====
 __**[[egovframework:dev2:bdev:imp:batch_template_wizard# |<< 이전 과정 보기]]**__\\
===  ===

**5.** 프로젝트 명과 Maven 설정에 필요한 값들을 입력하고 **Finish**를 클릭한다. \\ {{:egovframework:dev2:bdev:imp:batch_template_wizard:db_scheduler_template.png?450|DB-Scheduler Project 설정}} \\ \\

**6.** 배치작업 수행 전, 배치작업에 필요한 스키마를 정의한다. \\  
  * 배치작업 수행을 위해서는 배치작업에 필요한 데이터베이스가 구성되어야 정상적으로 동작한다. 전자정부에서는 데이터베이스 구성용 스크립트를 제공한다.
  * [[egovframework:rte2:brte:batch_example:setup|예제 설치의 3번(HSQL) 또는 HSQL 외 DB 연결 순서(HSQL 외)]]을 참고하여 스키마를 정의한다.  
**7.** EgovSchedulerJobRunner 클래스에서 **마우스 우클릭** > **Run As** > **Java Application**을 통해 배치 템플릿 프로젝트가 올바르게 실행되는지 확인한다. \\
  * Console 창을 통해 배치작업이 10초 간격으로 총 3번 수행되는 것을 확인할 수 있다.(default 설정)
  * COMPLETED 로그를 통해 배치작업의 정상적인 작동을 확인할 수 있다. \\  
{{:egovframework:dev2:bdev:imp:batch_template_wizard:db_scheduler_template_run_result.png?850|}} \\ \\
(Console에서 첫번째 시도된 배치작업의 로그를 확인하 수 없다면 이클립스 메뉴바-Window-Preferences-Run/Debug-Console에서 Limit console width를 체크 해제한다.)
 
 

==== 참고사항 ====
✔ 해당 프로젝트의 입력 리소스 유형은 DB이므로 입력 리소스의 경로가 따로 있지 않다.(입력 리소스 유형이 File인 경우, 경로 필요) \\
✔ 배치작업을 통해 생성되는 결과물 파일은 프로젝트의 target/test-outputs 경로에 생성되도록 기본 설정 되있다.(ItemWriter 설정의 resource property를 통해 경로 및 파일명 변경 가능) \\

**eGovFrame Batch Template Project 설정 페이지** \\
^  옵션  ^  설명  ^  기본값  ^
| Project Name | 새 프로젝트 이름을 입력한다. | 공백 |
| Contents | Use default Workspace location체크시 기본 작업공간에 프로젝트 명으로 프로젝트 디렉토리가 생성된다. \\ 임의의 디렉토리 선택시 옵션을 해제하고 **Browse**버튼을 클릭하여 위치를 선택한다. | Use default Workspace location |
| Group Id | Maven에서의 Group Id를 입력한다. | 공백 |
| Artifact Id | Maven에서의 Artifact Id를 입력한다. | 공백 |
| Version | Maven에서의 버젼을 입력한다. | 1.0.0 |

**제공 Sample Job (입력 리소스 유형이 DB인 프로젝트)** 
^  Job  ^  Reader  ^  Writer  ^  Job 설명  ^
^  ibatisToDelimitedJob  |  [[egovframework:rte2:brte:batch_core:item_reader#Database ItemReader|IbatisPagingItemReader]]  |  [[egovframework:rte2:brte:batch_core:item_writer#FlatFile ItemWriter|FlatFileItemWriter]]  | 데이터베이스 테이블에 존재하는 원천 데이터를 iBatis를 이용해 입력받아 배치작업 처리 후, 구분자 방식으로 데이터를 저장하는 Job  |
^  ibatisToFixedLengthJob  |  [[egovframework:rte2:brte:batch_core:item_reader#Database ItemReader|IbatisPagingItemReader]]  |  [[egovframework:rte2:brte:batch_core:item_writer#FlatFile ItemWriter|FlatFileItemWriter]]  | 데이터베이스 테이블에 존재하는 원천 데이터를 iBatis를 이용해 입력받아 배치작업 처리 후, 고정길이 방식으로 데이터를 저장하는 Job   |
^  ibatisToIbatisJob  |  [[egovframework:rte2:brte:batch_core:item_reader#Database ItemReader|IbatisPagingItemReader]]  |  [[egovframework:rte2:brte:batch_core:item_writer#Database ItemWriter|IbatisBatchItemWriter]]  | 데이터베이스 테이블에 존재하는 원천 데이터를 iBatis를 이용해 입력받아 배치작업 처리 후, iBatis를 이용해 데이터베이스 테이블에 데이터를 저장하는 Job |
^  jdbcToJdbcJob  |  [[egovframework:rte2:brte:batch_core:item_reader#Database ItemReader|JdbcCursorItemReader]]  |  [[egovframework:rte2:brte:batch_core:item_writer#Database ItemWriter|JdbcBatchItemWriter]]  | 데이터베이스 테이블에 존재하는 원천 데이터를 JDBC를 이용해 입력받아 배치작업 처리 후, JDBC를 이용해 데이터베이스 테이블에 데이터를 저장하는 Job |

**Scheduler 템플릿 프로젝트의 default 설정** \\
^ ^  default 설정  ^
| EgovSchedulerJobRunner 클래스 | ApplicationContext를 종료 지연 시간 30000 milliseconds(30초) |
| context-scheduler-job.xml | 매 10초마다 Scheduler 작동 |
| context-batch-scheduler.xml | ibatisToDelimitedJob 수행|

  * default 설정으로 해당 프로젝트의 배치작업은 총 30초간, 매 10초 마다 수행된다.(총 3번의 배치작업 수행) \\
  * [[egovframework:rte2:brte:batch_core:egov_scheduler_runner_template#EgovSchedulerRunnerScheduler 설정 방법]]을 참고하여 설정 변경할 수 있다. \\