====== Manual ======

===== 실행환경 배포도구 =====

==== 배포도구 설치 ====

실행환경 배포 도구는 현재 이클립스 플러그인 형태로 제공되며 전자정부 표준프레임워크 포탈에서 다운로드 받아서 직접 설치하거나, 개발환경의 메뉴를이용해 update site로 설치할 수 있다.\\
개발자 개발환경(Developer Development Tool) Full Version 2.0.0에 포함되어 있으므로 full 버전을 사용하면 따로 설치 할 필요가 없다.
=== Customize Development Tool을 이용한 설치 ===
개발자용 개발환경(Implementation Tool) Light Version 2.0.0의 Customize Development Tool 이용하여 설치 할 수 있다.
Customize Development Tool의 eGovFrame RTE distribution Tool을 선택하고 설치한다.
  * [[egovframework:dev2:imp:editor:customize_development_tool|Customize Development Tool 가이드]]

=== 다운로드를 이용한 설치 ===
전자정부 표준프레임워크 포탈의 실행환경 다운로드페이지에서 실행환경 배포도구를 다운받아 이클립스 설치 폴더의 dropins 폴더에 jar파일을 복사하거나 혹은 plugin 폴더에 압축을 해제하는 방법으로 설치 할 수 있다.

{{:egovframework:rdt설치폴더.png|}}\\
플러그인을 설치한 뒤, 이클립스를 실행(이미 실행된 경우에는 재기동)하면 배포도구의 설치가 완료된다.

==== 환경설정 ====
실행환경 배포도구는 기본적으로 실행에 필요한 메타정보 파일을 내장하고 있지만, 환경설정을 통해 커스터마이징된 메타정보 파일을 사용하여 실행할 수 있다.\\
{{:egovframework:rdt환경설정.png|}}\\
Use local meta file : 직접 작성한 메타정보 파일을 사용하려면 체크한다.\\
Master pom file location : 직접 작성한 Master pom 파일의 위치를 지정한다.\\
Service file location : 직접 작성한 Service 파일의 위치를 지정한다.\\
Maven directory : maven 명령어를 사용하기 위해 maven이 설치된 디렉토리를 지정한다.\\

==== 실행환경 배포 ====
실행환경 배포도구는 전자정부프레임워크에 포함된 실행환경 라이브러리를 사용하기 위해 사용자가 직접 라이브러리를 다운받아 프로젝트에 포함시키거나 Maven pom.xml에 Dependency를 추가하지 않고, 실행환경 라이브러리를 사용하기 위한 도구이다. 라이브러리를 받아 오기 위해  Maven을 사용한다\\


  실행환경 라이브러리를 사용한 Project를 우클릭을 눌러서 Context Menu를 호출하여 eGovFrame메뉴 밑의 RTE Tool을 선택해 실행한다.
{{:egovframework:rdt실행메뉴.png|}}\\
  실행하게 되면 설치된 서비스와 설치 가능한 서비스로 분류되어 표시되고 원하는 서비스를 선택해서 설치하거나 제거, 업데이트할 수 있다.
{{:egovframework:rdt화면.png|}}\\
설치 : 설치 가능 한 서비스를 선택해 설치를 누르면 프로젝트의 pom.xml에 해당 라이브러리가 추가되고 전자정부 개발환경에서 자동으로 maven update가 실행되어 라이브러리를 받는다.\\
제거 : 설치된 서비스를 선택해서 제거를 할 수 있다.\\
업데이트 : 설치된 서비스 중 업데이트 가능으로 표시되어 있는 서비스를 선택해서 최신버전으로 업데이트 할 수 있다.\\
새로고침 : 화면을 새로 고친다.\\
서비스 설치 후 Maven Install 실행 : 체크하면 서비스 설치후 자동으로 Maven Install 명령을 실행한다\\

==== 메타 파일 작성 ====

메타파일을 사용자가 직접 작성하고자 하는 경우 pom_master.xml과 services.xml을 추가, 편집, 삭제 할 수 있다. pom_master.xml 파일은 실제 프로젝트 내 pom.xml에 사용될 dependency들을 정의하고, services.xml 파일은 각 서비스에 포함된 라이브러리들을 정의한다.\\

== pom_master.xml 구조  ==
  * 일반 pom파일과 구조가 동일, <dependency>태그를 추가하면 된다.

== services.xml 구조 ==
  * <services> : root
  * <name> : 서비스명
  * <layer> : 레이어 종류
  * <dependenies> : 서비스에 포함될 라이브러리들이 <dependency>로 정의되어 있다.
  * <dependency> : 서비스에 포함될 라이브러리의 dependency ID
  * dependency ID : pom_master.xml 에 기술된 라이브러리의 groupId 와 artifactId 의 조합
